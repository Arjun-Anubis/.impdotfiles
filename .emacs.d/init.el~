;; If you aint got package "package", Cant help ya
(require 'package)

;; Adding melpa to package sources, which also generates the list of available packages
(add-to-list 'package-archives
	    '("melpa" . "https://melpa.org/packages/" ) )

;; Grab necessary packages
(package-initialize)


;; If not already installed, install use package
(unless (package-installed-p 'use-package )
  (package-install 'use-package ) )

;; Import use-package
(require 'use-package )


; (setq use-package-always-ensure t)
(use-package evil
  :init
  (setq evil-want-keybinding nil)
  (setq evil-want-fine-undo 'fine)
  :config
  (evil-mode 1))
(use-package evil-collection
  :after evil
  :config
  (evil-collection-init))
(use-package evil-commentary
  :config
  (evil-commentary-mode 1))
(use-package org )
(use-package evil-org
  :config
  (add-hook 'org-mode-hook 'evil-org-mode)
  (setq evil-org-use-additional-insert t))
  (evil-org-set-key-theme '(navigation insert todo textobjects additional calendar shift heading))
(use-package gruvbox-theme )
(use-package spaceline
  :config
  (spaceline-spacemacs-theme))
(use-package general )
(use-package ivy )
(use-package counsel )
(use-package swiper )
(use-package which-key
	:config
	(which-key-mode 1))
(use-package ace-window )
(use-package evil-surround
  :config
  (global-evil-surround-mode 1))
(use-package company
  :init
  (setq company-idle-delay nil)
  :config
  (global-company-mode 1))
(use-package exwm)
(use-package exwm-config)

(require 'exwm )
(require 'exwm-config )
(exwm-config-default)
;; (use-package auto-complete
;;   :config
;;   (auto-complete-mode 1))
; (use-package smart-mode-line )
; (use-package smart-mode-line-powerline-theme )
(add-hook 'org-mode-hook                                                                      
          (lambda ()                                                                          
        (define-key evil-normal-state-map (kbd "TAB") 'org-cycle))) 


;; Setting up powerline
; (setq powerline-arrowshape 'curve )
; (setq powerline-default-seperator-dir '( right . left ))
; (powerline-evil-theme)

(setq initial-buffer-choice "~/general/TODO.org")
(setq org-todo-keywords
      '((sequence "TODO(t)" "WAIT(w@/!)" "|" "DONE(d!)" "CANCELED(c@)" "DOING(g!)")))
;; (add-hook 'find-file-hook
;; 		  (lambda()
;; 			(setq default-directory command-line-default-directory)))

;; Initializing major modes

;; Loading "config" files
(load "~/.emacs.d/edit.el" )
(load "~/.emacs.d/keybind.el" )
(load "~/.emacs.d/looks.el" )


;; Add char/line mode to mode line
(add-hook 'exwm-input--input-mode-change-hook
          'force-mode-line-update)
;; Emacs's own problem


;; Modes
;; (require 'org )

;; Looks
;; (require 'gruvbox-theme )
;; (require 'powerline )
;; (require 'smart-mode-line )
;; (require 'smart-mode-line-powerline-theme )
;; (setq exwm-input-global-keys
;;       `((,(kbd "s-k") . windmove-up)
;;         (,(kbd "s-j") . windmove-down)
;;         (,(kbd "s-h") . windmove-left)
;;         (,(kbd "s-l") . windmove-right)))

;; General (literally)
;; (require 'general)
;; (require 'counsel)
;; (require 'ivy)

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(custom-safe-themes '("7661b762556018a44a29477b84757994d8386d6edee909409fabe0631952dad9" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "6b5c518d1c250a8ce17463b7e435e9e20faa84f3f7defba8b579d4f5925f60c1" default))
 '(package-selected-packages '(evil-surround which-key use-package smart-mode-line-powerline-theme org-bullets helm gruvbox-theme general evil-commentary evil-collection counsel ace-window))
 '(pdf-view-midnight-colors '("#fdf4c1" . "#1d2021")))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '("c74e83f8aa4c78a121b52146eadb792c9facc5b1f02c917e3dbb454fca931223" "a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" "84d2f9eeb3f82d619ca4bfffe5f157282f4779732f48a5ac1484d94d5ff5b279" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" default))
 '(helm-minibuffer-history-key "M-p")
 '(package-selected-packages
   '(command-log-mode rainbow-delimiters exwm-x exwm spaceline evil-org company fzf org-present auto-complete org-download org-attach-screenshot which-key use-package smart-mode-line-powerline-theme org-bullets helm gruvbox-theme general evil-surround evil-commentary evil-collection counsel ace-window))
 '(sml/mode-width (if (eq (powerline-current-separator) 'arrow) 'right 'full))
 '(sml/pos-id-separator
   '(""
	 (:propertize " " face powerline-active1)
	 (:eval
	  (propertize " " 'display
				  (funcall
				   (intern
					(format "powerline-%s-%s"
							(powerline-current-separator)
							(car powerline-default-separator-dir)))
				   'powerline-active1 'powerline-active2)))
	 (:propertize " " face powerline-active2)))
 '(sml/pos-minor-modes-separator
   '(""
	 (:propertize " " face powerline-active1)
	 (:eval
	  (propertize " " 'display
				  (funcall
				   (intern
					(format "powerline-%s-%s"
							(powerline-current-separator)
							(cdr powerline-default-separator-dir)))
				   'powerline-active1 'sml/global)))
	 (:propertize " " face sml/global)))
 '(sml/pre-id-separator
   '(""
	 (:propertize " " face sml/global)
	 (:eval
	  (propertize " " 'display
				  (funcall
				   (intern
					(format "powerline-%s-%s"
							(powerline-current-separator)
							(car powerline-default-separator-dir)))
				   'sml/global 'powerline-active1)))
	 (:propertize " " face powerline-active1)))
 '(sml/pre-minor-modes-separator
   '(""
	 (:propertize " " face powerline-active2)
	 (:eval
	  (propertize " " 'display
				  (funcall
				   (intern
					(format "powerline-%s-%s"
							(powerline-current-separator)
							(cdr powerline-default-separator-dir)))
				   'powerline-active2 'powerline-active1)))
	 (:propertize " " face powerline-active1)))
 '(sml/pre-modes-separator (propertize " " 'face 'sml/modes)))
